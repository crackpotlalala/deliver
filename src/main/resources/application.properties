server.port=30333
#=========================================datasource========================================
#db1数据库配置mysql(默认数据库)
db1.datasource.jdbc-url=jdbc:mysql://127.0.0.1/deliver?useSSL=false&&allowPublicKeyRetrieval=true
db1.datasource.username=root
db1.datasource.password=root12345
db1.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#db2数据库配置mysql
db2.datasource.jdbc-url=jdbc:mysql://127.0.0.1/deliver1?useSSL=false&&allowPublicKeyRetrieval=true
db2.datasource.username=root
db2.datasource.password=root12345
db2.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#db2数据库配置oracle
#db2.datasource.jdbc-url = jdbc:oracle:thin:@127.0.0.1:1521:orcl
#db2.datasource.username = root
#db2.datasource.password = root
#db2.datasource.driver-class-name=oracle.jdbc.OracleDriver
## 设置MyBatis 的全局配置文件，mappers 接口路径，mappers 接口对应的xml 配置文件
mybatis.config.path=mybatis-config.xml
mapper.xml.config.path=/mappers/*.xml
mapper.package.path=com.deliver.demo.dao
#=========================================redis========================================
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口 使用默认端口6379可以省略配置
spring.redis.port=6379
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# Redis服务器连接密码（默认为空）
#spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=10000ms
# springCache redis 缓存默认失效时间
default.springcache.redis.expire.time=30
# Lettuce
# 连接池最大连接数（使用负值表示没有限制）默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=10000ms
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0
# 关闭超时时间
spring.redis.lettuce.shutdown-timeout=100ms
#=========================================kafka========================================
# 指定kafka 代理地址，可以多个,用逗号隔开
spring.kafka.bootstrap-servers=localhost:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=myGroup
# 指定默认topic id
spring.kafka.template.default-topic=my-replicated-topic
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency=3
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=1000
spring.kafka.producer.buffer-memory=524288
#consumer组一
spring.kafka.consumer.group-id.one=test
#consumer组二
spring.kafka.consumer.group-id.two=test2
#key-value序列化反序列化
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#=========================================异步线程池========================================
# 自定义异步线程池
core.pool.size=10
max.pool.size=20
queue.capacity=200
keep.alive.seconds=60
thread.name.prefix=testExecutor-


